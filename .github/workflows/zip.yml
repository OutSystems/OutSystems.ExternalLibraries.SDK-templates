# This workflow updates a template zip file if a file in its folder is changed.
name: Zip modified directories and commit

# Trigger the action when a pull request is made that modifies files in the specified directories.
on:
  pull_request:
    paths:
      - 'templates/basic/**'
      - 'templates/advanced/**'
      - 'templates/soap/**'

jobs:
  zip_and_commit:
    runs-on: ubuntu-latest
    env:
      # Define a mapping from directory names to zip file names.
      DIR_ZIP_MAP: 'templates/basic:basic_template templates/advanced:advanced_template templates/soap:soap_template'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Extract the branch name from the HEAD reference.
      - name: Set up branch variable
        id: extract_branch
        run: echo "::set-output name=branch::$(echo ${GITHUB_HEAD_REF#refs/heads/})"

      - name: Switch to correct branch
        run: git checkout "${{ steps.extract_branch.outputs.branch }}"

      # Identify the files that were changed in the pull request and output them for use in subsequent steps.
      - name: Identify changed files
        id: changed_files
        run: |
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files.txt
          echo ::set-output name=files::$(cat changed_files.txt)
          
      # If directories have been modified, compress them, commit the .zip files to the repository, and push the changes.
      - name: Compress modified directories, commit, and push
        id: compress_modified_directories_commit_and_push
        run: |
          # If directories have been modified, compress them, commit the .zip files to the repository, and push the changes.
          IFS=' ' read -r -a dir_zip_pairs <<< "$DIR_ZIP_MAP"
          declare -A dir_to_zip
          for pair in "${dir_zip_pairs[@]}"; do
            # Split each pair into a directory and a zip file name.
            IFS=':' read -r dir zip <<< "$pair"
            dir_to_zip[$dir]=$zip
          done
          changed_files="${{ steps.changed_files.outputs.files }}"

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Initialize an empty string to store the names of updated zip files.
          updated_zips=""
          for dir in "${!dir_to_zip[@]}"; do
            if [[ $changed_files == *"$dir/"* ]]; then
              # Check if the last commit that changed the directory is newer than the last commit that changed the zip file.
              last_dir_change=$(git log -1 --format="%at" -- "$dir")
              last_zip_change=$(git log -1 --format="%at" -- "${dir_to_zip[$dir]}.zip")
              if [[ "$last_dir_change" -gt "$last_zip_change" ]]; then
                git pull
                git clean -dfx
                cd "$dir"
                zip_name=${dir_to_zip[$dir]}
                rm -f "$GITHUB_WORKSPACE/$zip_name.zip"
                zip -r "$GITHUB_WORKSPACE/$zip_name.zip" .
                cd "$GITHUB_WORKSPACE"
                git add "$zip_name.zip"
                git commit -m "Updated $zip_name.zip"
                updated_zips+="$zip_name.zip, "
              fi
            fi
          done
    
          # Push the changes to the repository.
          git push origin "${{ steps.extract_branch.outputs.branch }}"

          echo ::set-output name=updated_zips::${updated_zips%??}
          
      # Comment on the pull request to notify that the zipped files have been added.
      - name: Comment PR
        uses: actions/github-script@v5
        if: steps.compress_modified_directories_commit_and_push.outputs.updated_zips != ''
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Updated zip files: ${{ steps.compress_modified_directories_commit_and_push.outputs.updated_zips }}'
            })
